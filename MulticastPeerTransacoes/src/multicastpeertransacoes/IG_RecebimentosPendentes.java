/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multicastpeertransacoes;

import DataBase.ControleDB;
import DataBase.FuncoesDB;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;

/**
 *
 * @author Felipe Lopes Zem
 */
public final class IG_RecebimentosPendentes extends javax.swing.JFrame {
    IG_MAIN igMain;

    /**
     * Creates new form IG_Peers
     */
    public IG_RecebimentosPendentes() {
        initComponents();
    }
    
    protected void atualizarTabela(){
        ResultSet rs;
        TableModel tm;
        String sql = "select * from recebimentospendentes where idrecebedor = " + igMain.getIdPeer();
        
        ControleDB.abrirConexaoDBOficial();
        rs = ControleDB.consultarDBOficial(sql);
        tm = ControleDB.resultSetToTableModel(rs);
        ControleDB.fecharConexaoDBOficial();
        jTable1.setModel(tm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        b_atualizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf_idRecebimento = new javax.swing.JTextField();
        b_autorizaUm = new javax.swing.JButton();
        b_negaUm = new javax.swing.JButton();
        b_autorizaTodos = new javax.swing.JButton();
        b_negaTodos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Recebimentos pendentes");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        b_atualizar.setText("Atualizar tabela");
        b_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_atualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(b_atualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ações"));

        jLabel1.setText("ID do Recebimento: ");

        b_autorizaUm.setText("Autorizar este Recebimento");
        b_autorizaUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_autorizaUmActionPerformed(evt);
            }
        });

        b_negaUm.setText("Negar este Recebimento");
        b_negaUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_negaUmActionPerformed(evt);
            }
        });

        b_autorizaTodos.setText("Autorizar TODOS");
        b_autorizaTodos.setEnabled(false);
        b_autorizaTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_autorizaTodosActionPerformed(evt);
            }
        });

        b_negaTodos.setText("Negar TODOS");
        b_negaTodos.setEnabled(false);
        b_negaTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_negaTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_idRecebimento))
            .addComponent(b_autorizaUm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(b_autorizaTodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(b_negaUm, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
            .addComponent(b_negaTodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_idRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_autorizaUm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_negaUm)
                .addGap(18, 18, 18)
                .addComponent(b_autorizaTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_negaTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_atualizarActionPerformed
        atualizarTabela();
    }//GEN-LAST:event_b_atualizarActionPerformed

    private void b_autorizaUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_autorizaUmActionPerformed
        int enviador = 0, recebedor = 0, coins = 0, idTransacao = 0;
        try {
            int idRec = Integer.parseInt(tf_idRecebimento.getText());
            ResultSet rs;
            ControleDB.abrirConexaoDBOficial();
            rs = ControleDB.consultarDBOficial("select idenviador, idrecebedor, coins, idtransacao from recebimentospendentes where id = " + idRec);
            
            rs.first();

            enviador = rs.getInt("idenviador");
            recebedor = rs.getInt("idrecebedor");
            coins = rs.getInt("coins");
            idTransacao = rs.getInt("idtransacao");
            
            ControleDB.fecharConexaoDBOficial();
            
            String msLog = "<Recebendo> (" + igMain.getIdPeer() + ") aceitou @" + coins + "@ Coins de $"+enviador+"$ </Enviando>";

            //PeerRecebedor, peerEnviador, peerMinerador - 0 ainda não tem minerador, Estado - 0 Não aceito ainda, Mensagem
            FuncoesDB.insereLogPeerOficial(recebedor, enviador, 0, 4, msLog);
            
            FuncoesDB.atualizaRecebimento(idRec, 1, recebedor, coins, idTransacao);
            
            //Informa via UNICAST ao Enviador que seu voto é SIM.
            if(igMain.sendMessageUC(
                    Main.MSG_RECEIVER_VOTE_YES + idTransacao + ";;;" + igMain.getNomePeer() + ";;;" + 1,
                    FuncoesDB.buscaPeerNome(recebedor),
                    InetAddress.getByName(FuncoesDB.buscaPeerEndereco(recebedor)),
                    FuncoesDB.buscaPeerUnicastPort(recebedor)
            ))
            {
                igMain.sendMessageMC(
                        Main.MSG_MINER_REQUEST + FuncoesDB.buscaPeerNome(enviador) + ";;;" + igMain.getNomePeer() + ";;;" + coins + ";;;" + idTransacao
                );
            }
            
            /**
                <Aceitou> PeerRecebedor Aceitou as @X@ coins</Aceitou>
             */
            String msgLog = "<Aceitou> (" + recebedor + ") Aceitou @" + coins + "@ Coins de [" + enviador + "] </Aceitou>";
            
            //PeerRecebedor, peerEnviador, peerMinerador - 0 ainda não tem minerador, Estado - 0 Não aceito ainda, Mensagem
            FuncoesDB.insereLogPeerOficial(recebedor, enviador, 0, 4, msgLog);
            
            //Trava o peer RECEBEDOR!
            igMain.travarPeer(idTransacao);
        } catch (SQLException | UnknownHostException ex) {
            Logger.getLogger(IG_RecebimentosPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
        atualizarTabela();
    }//GEN-LAST:event_b_autorizaUmActionPerformed

    private void b_autorizaTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_autorizaTodosActionPerformed
        // [TODO intencional!] add your handling code here:
    }//GEN-LAST:event_b_autorizaTodosActionPerformed

    private void b_negaUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_negaUmActionPerformed
        int enviador = 0, recebedor = 0, coins = 0, idTransacao = 0;
        try {
            int idRec = Integer.parseInt(tf_idRecebimento.getText());
            ResultSet rs;
            ControleDB.abrirConexaoDBOficial();
            rs = ControleDB.consultarDBOficial("select idenviador, idrecebedor, coins, idtransacao from recebimentospendentes where id = " + idRec);
            
            rs.first();

            enviador = rs.getInt("idenviador");
            recebedor = rs.getInt("idrecebedor");
            coins = rs.getInt("coins");
            idTransacao = rs.getInt("idtransacao");
            
            ControleDB.fecharConexaoDBOficial();
            FuncoesDB.atualizaRecebimento(idRec, 2, recebedor, coins, idTransacao);
            
            //Informa via UNICAST ao Enviador que seu voto é NÃO.
            igMain.sendMessageUC(
                    Main.MSG_RECEIVER_VOTE_NO + idTransacao + ";;;" + igMain.getNomePeer() + ";;;" + -1,
                    FuncoesDB.buscaPeerNome(recebedor),
                    InetAddress.getByName(FuncoesDB.buscaPeerEndereco(recebedor)),
                    FuncoesDB.buscaPeerUnicastPort(recebedor)
            );
            
            /**
                <Recusou> PeerRecebedor Aceitou as @X@ coins</Recusou>
             */
            String msgLog = "<Recusou> (" + recebedor + ") Recusou @" + coins + "@ Coins de [" + enviador + "] </Recusou>";
            
            //PeerRecebedor, peerEnviador, peerMinerador - 0 ainda não tem minerador, Estado - 0 Não aceito ainda, Mensagem
            FuncoesDB.insereLogPeerOficial(recebedor, enviador, 0, 4, msgLog);
        } catch (SQLException | UnknownHostException ex) {
            Logger.getLogger(IG_RecebimentosPendentes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b_negaUmActionPerformed

    private void b_negaTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_negaTodosActionPerformed
        // [TODO intencional!] add your handling code here:
    }//GEN-LAST:event_b_negaTodosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IG_RecebimentosPendentes().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_atualizar;
    private javax.swing.JButton b_autorizaTodos;
    private javax.swing.JButton b_autorizaUm;
    private javax.swing.JButton b_negaTodos;
    private javax.swing.JButton b_negaUm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tf_idRecebimento;
    // End of variables declaration//GEN-END:variables

    void setIgMain(IG_MAIN igMain) {
        this.igMain = igMain;
    }
}
